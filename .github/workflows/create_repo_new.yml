name: Create Repository without template

on:
  workflow_dispatch:
    inputs:
      repository_name:
        description: 'Enter the name of the new repository'
        required: true
      description:
        description: 'Description'
        required: true

jobs:
  create_repository:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Repository 
        run: |
          REPO_NAME="${{ github.event.inputs.repository_name }}"
          DESCRIPTION="${{ github.event.inputs.description }}"
          BRANCHES="Prod,qa,dev"
          DEFAULT_BRANCH="prod"
          curl -X POST \
            -H "Authorization: token ${{ secrets.API_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/user/repos \
            -d '{"name": "'"$REPO_NAME"'","private":false,"description": "'"$DESCRIPTION"'"}'

          sleep 10

      
          curl -X PUT -H "Authorization: token ${{ secrets.API_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ secrets.username }}/$REPO_NAME/contents/README.md \
          -d @- <<EOF
          {
            "message": "Add README.md",
            "content": "$(echo -n 'New Repo' | base64)"
          }
          EOF
          

      
          DEFAULT_BRANCH_SHA=$(git ls-remote https://github.com/${{ secrets.username }}/$REPO_NAME refs/heads/main | cut -f1)
         
          IFS=',' read -ra BRANCH_LIST <<< "$BRANCHES"
          for branch in "${BRANCH_LIST[@]}"; do
            branch_name="$(echo -e "${branch}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
            
            if [ -n "$branch_name" ]; then
              curl -X POST \
                -H "Authorization: token ${{ secrets.API_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
               -d "{\"ref\": \"refs/heads/$branch_name\", \"sha\": \"$DEFAULT_BRANCH_SHA\"}" \
                "https://api.github.com/repos/${{ secrets.username }}/$REPO_NAME/git/refs" 
            fi
          done


      
          README_SHA=$(curl -s -H "Authorization: token ${{ secrets.API_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ secrets.username }}/$REPO_NAME/contents/README.md?ref=main" | jq -r .sha)


          curl -X PUT -H "Authorization: token ${{ secrets.API_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ secrets.username }}/$REPO_NAME/contents/README.md \
            -d @- <<EOF
          {
            "message": "Copy README.md to prod",
            "content": "$(echo -n '$DESCRIPTION' | base64)",
            "branch": "$DEFAULT_BRANCH",
            "sha": "$README_SHA"
          }
          EOF
          
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.API_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ secrets.username }}/$REPO_NAME \
            -d "{\"default_branch\": \"$DEFAULT_BRANCH\"}"

    
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.API_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ secrets.username }}/$REPO_NAME/git/refs/heads/main


      

          curl -X PATCH \
            -H "Authorization: token ${{ secrets.API_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ secrets.username }}/$REPO_NAME \
            -d '{"private": true}'

          WORKFLOW_FILES="demo_workflow_file1.yml,demo_workflow_file2.yml,demo_workflow_file3.yml"

          IFS=',' read -ra WORKFLOW_LIST <<< "$WORKFLOW_FILES"
          for workflow_file in "${WORKFLOW_LIST[@]}"; do
            workflow_file="$(echo -e "${workflow_file}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
            

            workflow_content=$(curl -s -H "Authorization: token ${{ secrets.API_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ secrets.username }}/$REPO_NAME/contents/.github/workflows/$workflow_file?ref=main")

            workflow_sha=$(echo "$workflow_content" | jq -r .sha)
            workflow_encoded_content=$(echo "$workflow_content" | jq -r .content)

            
            curl -X PUT -H "Authorization: token ${{ secrets.API_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ secrets.username }}/$REPO_NAME/contents/.github/workflows/$workflow_file \
              -d @- <<EOF
              {
                "message": "Copy $workflow_file to prod",
                "content": "$workflow_encoded_content",
                "branch": "$DEFAULT_BRANCH",
                "sha": "$workflow_sha"
              }
              EOF
          done
    
