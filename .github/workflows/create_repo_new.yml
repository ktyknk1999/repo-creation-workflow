name: Create Repository without template

on:
  workflow_dispatch:
    inputs:
      repository_name:
        description: 'Enter the name of the new repository'
        required: true
      description:
        description: 'Description'
        required: true

jobs:
  create_repository:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Repository 
        run: |
          REPO_NAME="${{ github.event.inputs.repository_name }}"
          DESCRIPTION="${{ github.event.inputs.description }}"
          BRANCHES="Prod,qa,dev"
          curl -X POST \
            -H "Authorization: token ${{ secrets.API_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/user/repos \
            -d '{"name": "'"$REPO_NAME"'","private":false,"description": "'"$DESCRIPTION"'",\"default_branch\": \"Prod\"}'

          sleep 10

          curl -X PUT -H "Authorization: token ${{ secrets.API_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ secrets.username }}/$REPO_NAME/contents/README.md \
          -d @- <<EOF
          {
            "message": "Add README.md",
            "content": "$(echo -n 'New Repo' | base64)"
          }
          EOF
          
          DEFAULT_BRANCH_SHA=$(git ls-remote https://github.com/${{ secrets.username }}/$REPO_NAME refs/heads/Prod | cut -f1)
         
          IFS=',' read -ra BRANCH_LIST <<< "$BRANCHES"
          for branch in "${BRANCH_LIST[@]}"; do
            branch_name="$(echo -e "${branch}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
            
            if [ -n "$branch_name" ]; then
              curl -X POST \
                -H "Authorization: token ${{ secrets.API_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
               -d "{\"ref\": \"refs/heads/$branch_name\", \"sha\": \"$DEFAULT_BRANCH_SHA\"}" \
                "https://api.github.com/repos/${{ secrets.username }}/$REPO_NAME/git/refs" 
            fi
          done
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.API_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ secrets.username }}/$REPO_NAME \
            -d '{"private": true}'
    
